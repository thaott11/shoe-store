@model Data.Models.Product

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <div id="productImageCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @if (Model.Image != null && Model.Image.Any())
                    {
                        var mainImage = Model.Image.FirstOrDefault();
                        if (mainImage != null)
                        {
                            <div class="carousel-item active">
                                <img id="mainImage" src="@Url.Action("GetImage", "User", new { imageName = Model.Image })" class="d-block w-100" />
                            </div>
                        }
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <img id="mainImage" src="https://via.placeholder.com/800x400" class="d-block w-100" alt="No image available">
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#productImageCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#productImageCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>

            <!-- Additional Images Section -->
            <div class="mt-3 d-flex">
                @if (Model.ImageDetails != null && Model.ImageDetails.Any())
                {
                    // Hiển thị ảnh chính
                    <div class="me-2">
                        <img src="@Url.Action("GetImage", "User", new { imageName = Model.Image })" class="img-thumbnail" style="width: 80px; height: 80px;" alt="Main Image"
                             onmouseover="changeMainImage('@Url.Action("GetImage", "User", new { imageName = Model.Image })')" />
                    </div>

                    // Hiển thị ảnh phụ
                    foreach (var imageDetail in Model.ImageDetails)
                    {
                        <div class="me-2">
                            <img src="@Url.Action("GetImageDetail", "User", new { imageNamedetail = imageDetail.ImageUrl })" class="img-thumbnail" style="width: 80px; height: 80px;" alt="Detail Image"
                                 onmouseover="changeMainImage('@Url.Action("GetImageDetail", "User", new { imageNamedetail = imageDetail.ImageUrl })')" />
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Product Details -->
        <div class="col-md-6">
            <h3>@Model.ProductName</h3>
            <h4 class="">@Model.Price.ToString("N0") $</h4>

            <div class="size-selection mt-4 col-md-9">
                <h6>Select Size</h6>
                <div class="d-flex flex-wrap">
                    <div>
                        @if (ViewBag.ProductSizes != null)
                        {
                            foreach (var size in ViewBag.ProductSizes)
                            {
                                var isAvailable = Model.productSizes != null && Model.productSizes.Any(s => s.SizeId == size.SizeId);
                                <button class="btn m-1 @(isAvailable ? "btn-outline-secondary" : "btn-secondary disabled")"
                                @(isAvailable ? "" : "disabled")
                                        style="opacity: @(isAvailable ? 1 : 0.3);"
                                        onclick="setSelectedSize('@size.Size', this)">
                                    @size.Size
                                </button>
                            }
                        }
                        else
                        {
                            <p>No product sizes available.</p>
                        }
                    </div>
                </div>

                <div class="mt-4 text-center mt-5">
                    <input type="hidden" id="selectedSize" name="SelectedSize" value="" />
                    <a method="post" asp-controller="Order" asp-action="CreateOrder" asp-route-productId="@Model.Id" asp-route-size="" class="btn btn-dark btn-lg w-75 rounded-pill" onclick="return submitOrder()">Add to Cart</a>
                </div>

                <div class="mt-4 text-center mb-5">
                    <button class="btn btn-light btn-outline-dark btn-lg w-75 rounded-pill">Favourite</button>
                </div>
            </div>

            <div class="col-md-10 mt-5">
                <p>@Model.Description</p>
            </div>
        </div>
    </div>

</div>

<script>
    let currentImage = '';

    function changeMainImage(imageUrl) {
        document.getElementById('mainImage').src = imageUrl;
        currentImage = imageUrl;
    }
    function resetMainImage(mainImageUrl) {
        if (!currentImage) {
            document.getElementById('mainImage').src = mainImageUrl;
        }
    }
    let selectedSize = '';

    function setSelectedSize(size, button) {
        selectedSize = size; // Lưu kích thước đã chọn vào biến
        document.querySelectorAll('.size-selection .btn').forEach(btn => btn.classList.remove('active'));
        button.classList.add('active'); // Đánh dấu kích thước đã chọn
    }

    function submitOrder() {
        if (!selectedSize) {
            alert('Please select a size!');
            return false; // Ngăn chặn chuyển hướng nếu chưa chọn kích thước
        }

        const link = document.querySelector('a[asp-controller="Order"]');
        link.setAttribute('asp-route-size', selectedSize); // Gán kích thước vào đường dẫn
        return true; // Cho phép chuyển hướng
    }
</script>
