@model Data.Models.Product
<div class="content-wrapper">
    <div class="app-content-header">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-8">
                    <h3 class="mb-0">Update Product</h3>
                </div>
                <div class="col-sm-4">
                    <ol class="breadcrumb float-sm-end">
                        <li class="breadcrumb-item"><a asp-action="ProductList">Product List</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Update Product</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Update Product</h3>
                        </div>
                        <form asp-action="UpdateProduct" id="quickForm" method="POST" enctype="multipart/form-data">
                            <input type="hidden" name="Id" value="@Model.Id" />
                            <div class="card-body">
                                <div class="row">
                                    <div class="card-body col-lg-8">
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="productName">Product Name</label>
                                                <input type="text" name="ProductName" value="@Model.ProductName" class="form-control" id="productName" placeholder="Enter product name" required minlength="2" maxlength="50">
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label for="price">Price</label>
                                                <input type="number" step="0.01" name="Price" value="@Model.Price" class="form-control" id="price" placeholder="Enter price" required>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="description">Description</label>
                                            <textarea class="form-control" rows="3" name="Description" id="description" placeholder="Enter description" required minlength="2" maxlength="500">@Model.Description</textarea>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="quantity">Quantity</label>
                                                <input type="number" name="Quantity" value="@Model.Quantity" class="form-control" id="quantity" placeholder="Enter quantity" required min="0">
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label for="color">Color</label>
                                                <input type="text" name="Color" value="@Model.Color" class="form-control" id="color" placeholder="Enter color">
                                            </div>
                                        </div>

                                        <!-- Product Categories -->
                                        <div class="form-group mt-4">
                                            <label>Product Categories</label>
                                            <div>
                                                @if (ViewBag.Categories != null && ViewBag.Categories.Count > 0)
                                                {
                                                    foreach (var category in ViewBag.Categories)
                                                    {
                                                        <div style="display: inline-block; margin-right: 20px;">
                                                            <input class="form-check-input" type="checkbox" name="category" value="@category.Id" id="category_@category.Id" @(Model.Categories.Any(c => c.Id == category.Id) ? "checked" : "") />
                                                            <label class="form-check-label" for="category_@category.Id">@category.NameCategory</label>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <p>No categories available.</p>
                                                }
                                            </div>
                                        </div>

                                        <!-- Product Sizes -->
                                        <div class="form-group mt-4">
                                            <label>Product Sizes</label>
                                            <div>
                                                @if (ViewBag.ProductSizes != null)
                                                {
                                                    foreach (var size in ViewBag.ProductSizes)
                                                    {
                                                        <div style="display: inline-block; margin-right: 20px;">
                                                            <input class="form-check-input" type="checkbox" name="productsize" value="@size.SizeId" id="size_@size.SizeId" @(Model.productSizes.Any(s => s.SizeId == size.SizeId) ? "checked" : "") />
                                                            <label class="form-check-label" for="size_@size.SizeId">@size.Size</label>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <p>No product sizes available.</p>
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Product Images -->
                                    <div class="card-body col-lg-4">
                                        <div class="image-container position-relative">
                                            <img id="imagePreview" class="image-preview img-fluid"
                                                 src="@Url.Action("GetImage", "Product", new { imageName = Model.Image })" alt="@Model.ProductName" style="width:200px; height: 200px; object-fit: cover;" />
                                            <label for="thumbnail" class="camera-icon position-absolute" onclick="document.getElementById('thumbnail').click();">
                                                <i class="fas fa-camera"></i>
                                            </label>

                                            <label class="remove-image" style="display:none; cursor:pointer;">
                                                <i class="fas fa-times"></i>
                                            </label>
                                            <input type="file" id="thumbnail" name="ImageFile" style="display: none;">
                                        </div>
                                    </div>
                                </div>

                                <!-- Product Detail Images -->
                                <div class="card-body col-lg-12">
                                    <label for="additionalImages" style="display: block;">Product Details Images</label>
                                    <div class="row">
                                        @for (int i = 0; i < 5; i++)
                                        {
                                            var imageUrl = (i < Model.ImageDetails.Count) ? Url.Content($"https://localhost:7172/api/Products/GetImageDetail/{Model.ImageDetails.ElementAt(i).ImageUrl}") : Url.Content("~/Image/null-image.png");

                                            <div class="col-lg-2 col-md-4 col-sm-6">
                                                <div class="image-container position-relative">
                                                    <img id="imagePreviewDetail_@i" class="image-preview img-fluid"
                                                         src="@imageUrl" alt="Detail Image Preview"
                                                         style="width: 90px; height: 90px; object-fit: cover;">

                                                    <label for="thumbnailDetail_@i" class="camera-icon position-absolute" style="@(i < Model.ImageDetails.Count ? "display:none;" : "")">
                                                        <i class="fas fa-camera"></i>
                                                    </label>

                                                    <label class="remove-image" style="@(i < Model.ImageDetails.Count ? "display:block;" : "display:none;") cursor:pointer;">
                                                        <i class="fas fa-times"></i>
                                                    </label>

                                                    <input type="file" id="thumbnailDetail_@i" name="imageFiles" style="display: none;" data-index="@i">
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div class="card-footer">
                                    <button type="submit" class="btn btn-primary">Update Product</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('thumbnail').addEventListener('change', function () {
        const file = this.files[0];
        const imagePreview = document.getElementById('imagePreview');
        const removeImage = imagePreview.parentElement.querySelector('.remove-image');
        const cameraIcon = imagePreview.parentElement.querySelector('.camera-icon');

        if (file) {
            const reader = new FileReader();
            reader.onload = function (event) {
                imagePreview.src = event.target.result; // Cập nhật hình ảnh xem trước
                removeImage.style.display = 'block'; // Hiển thị biểu tượng xóa
                cameraIcon.style.display = 'none'; // Ẩn biểu tượng camera
            };
            reader.readAsDataURL(file);
        } else {
            // Nếu không có file nào được chọn, đặt lại ảnh xem trước
            imagePreview.src = '@Url.Content("~/Image/null-image.png")';
            removeImage.style.display = 'none'; // Ẩn biểu tượng xóa
            cameraIcon.style.display = 'block'; // Hiển thị biểu tượng camera
        }
    });

    // Xử lý khi nhấp vào biểu tượng camera để mở chọn file
    document.querySelector('.camera-icon').addEventListener('click', function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định
        document.getElementById('thumbnail').click(); // Mở hộp thoại chọn file
    });

    document.querySelectorAll('input[type="file"][id^="thumbnailDetail_"]').forEach(function (input) {
        input.addEventListener('change', function () {
            const index = this.getAttribute('data-index');
            const file = this.files[0];
            const imagePreviewDetail = document.getElementById('imagePreviewDetail_' + index);
            const removeImageDetail = imagePreviewDetail.parentElement.querySelector('.remove-image');
            const cameraIconDetail = imagePreviewDetail.parentElement.querySelector('.camera-icon');

            if (file) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    imagePreviewDetail.src = event.target.result;
                    removeImageDetail.style.display = 'block';  // Hiển thị biểu tượng xóa
                    cameraIconDetail.style.display = 'none';     // Ẩn biểu tượng camera
                };
                reader.readAsDataURL(file);
            } else {
                // Đặt lại ảnh xem trước nếu không có file nào được chọn
                imagePreviewDetail.src = '@Url.Content("~/Image/null-image.png")';
                removeImageDetail.style.display = 'none';
                cameraIconDetail.style.display = 'block';
            }
        });
    });

</script>


<style>
    .image-container {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 150px;
        width: 150px;
        margin: 0 auto;
    }

    .image-preview {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
    }

    .camera-icon, .remove-image {
        position: absolute;
        bottom: 10px;
        right: 10px;
        background-color: rgba(255, 255, 255, 0.7);
        border-radius: 50%;
        padding: 5px;
        cursor: pointer;
    }

        .camera-icon i, .remove-image i {
            font-size: 20px;
        }

    .remove-image {
        display: none;
    }

    .card-body .row {
        display: flex;
        justify-content: space-between;
    }

    .card-body .col-lg-2 {
        padding: 10px;
    }
</style>